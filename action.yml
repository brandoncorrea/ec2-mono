name: EC2 Mono
description: FIXME

inputs:
  aws-access-key-id:
    description: FIXME
    required: true
  aws-secret-access-key:
    description: FIXME
    required: true
  aws-region:
    description: FIXME
    required: true
  aws-image-id:
    description: FIXME
    required: false
    default: ami-04a81a99f5ec58529
  aws-instance-type:
    description: FIXME
    required: false
    default: t2.micro
  aws-security-group-ids:
    description: FIXME
    required: true
  aws-key-name:
    description: FIXME
    required: true
  app-name:
    description: FIXME
    required: true
  env-name:
    description: FIXME
    required: true

runs:
  using: 'composite'

  steps:
    - name: Install AWS CLI
      shell: sh
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Get old instance IDs
      shell: sh
      run: |
        EC2_OLD_INSTANCE_IDS=$(aws ec2 describe-instances \
          --filters "Name=tag:app,Values=${{ inputs.app-name }}" "Name=tag:env,Values=${{ inputs.env-name }}" "Name=instance-state-name,Values=pending,running,shutting-down,stopping,stopped" \
          --query 'Reservations[*].Instances[*].InstanceId' \
          --output text | tr '\n' ' ')
        echo "EC2_OLD_INSTANCE_IDS=$EC2_OLD_INSTANCE_IDS" >> $GITHUB_ENV

    - name: Deploy new EC2 instance
      shell: sh
      run: |
        EC2_NEW_INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ${{ inputs.aws-image-id }} \
          --count 1 \
          --instance-type ${{ inputs.aws-instance-type }} \
          --key-name ${{ inputs.aws-key-name }} \
          --security-group-ids ${{ inputs.aws-security-group-ids }} \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=app,Value=${{ inputs.app-name }}},{Key=env,Value=${{ inputs.env-name }}}]' \
          --query 'Instances[0].InstanceId' \
          --output text)
        echo "EC2_NEW_INSTANCE_ID=$EC2_NEW_INSTANCE_ID" >> $GITHUB_ENV

    - name: Wait for Instance to Start
      shell: sh
      run: |
        aws ec2 wait instance-running --instance-ids ${{ env.EC2_NEW_INSTANCE_ID }}
        aws ec2 wait instance-status-ok --instance-ids ${{ env.EC2_NEW_INSTANCE_ID }}
